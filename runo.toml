[[commands]]
name = "e2e"
description = "run end to end tests"
execute = "python3 -m tests.e2e.run"

[[commands]]
name = "test"
description = "run unit tests"
before = ["source /tmp/runo_venv/.venv/bin/activate", "ln -s runo runo.py"]
execute = "pytest"
# clean all files, generated by test (__pycache__/.coverage),
# except of htmlcov and pytest_cache, which are useful for us
after = ["rm -f runo.py", "rm -rf .coverage", "rm -rf tests/unit/__pycache__", "rm -rf __pycache__"]
examples = ["tests --cov -vv", "tests --last-failed"]
docker_container = "python39"
docker_run_options = "-it -v .:/app -w /app"

[[commands]]
name = "shell"
description = "debug container by running shell in interactive mode (keep container running)"
execute = "/bin/sh"
docker_container = "python39"
docker_run_options = "-it -v .:/app -w /app"

[[commands]]
name = "pre-commit"
description = "quick checks/fixes of code formatting (ruff/mypy)."
execute = "scripts/pre_commit.sh"
docker_container = "python39"
docker_run_options = "-v .:/app -w /app"

[[commands]]
name = "update-deps"
description = "updates dependencies, used in project, to the latest versions"
execute = "scripts/update_deps.sh"
docker_container = "python39"
docker_run_options = "-v .:/app -w /app"

[[commands]]
name = "mypy"
description = "runs 'mypy' static type checker"
before = ["source /tmp/runo_venv/.venv/bin/activate"]
execute = "mypy"
examples = ["mypy runo tests"]
docker_container = "python39"
docker_run_options = "-v .:/app -w /app"

[[commands]]
name = "ruff"
description = "runs 'ruff' (checker/formatter)"
before = ["source /tmp/runo_venv/.venv/bin/activate"]
execute = "ruff"
examples = ["ruff check runo tests", "ruff format runo tests --check"]
docker_container = "python39"
docker_run_options = "-v .:/app -w /app"

[[docker_containers]]
name = "python36"
docker_file_path = "containers/python36/Dockerfile"

[[docker_containers]]
name = "python37"
docker_file_path = "containers/python37/Dockerfile"

[[docker_containers]]
name = "python38"
docker_file_path = "containers/python38/Dockerfile"

[[docker_containers]]
name = "python39"
docker_file_path = "containers/python39/Dockerfile"

[[docker_containers]]
name = "python310"
docker_file_path = "containers/python310/Dockerfile"

[[docker_containers]]
name = "python311"
docker_file_path = "containers/python311/Dockerfile"

[[docker_containers]]
name = "python312"
docker_file_path = "containers/python312/Dockerfile"

[[docker_containers]]
name = "python313"
docker_file_path = "containers/python313/Dockerfile"