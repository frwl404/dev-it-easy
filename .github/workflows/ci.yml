name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  static-checks:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # Static type checking
      - name: mypy
        run: ./runo mypy runo tests
      # Linter
      - name: ruff (linter)
        run: ./runo ruff check runo tests
      # Formatter
      - name: ruff (formatter)
        run: ./runo ruff format runo tests --check
#      # Check that version was set correctly
#      - name: version checker
#        run: |
#          expected="runo version: $(git describe --tags)"
#          actual="$(./runo -v)"
#
#          if [ "$actual" = "$expected" ]; then
#            echo "OK"
#          else
#            echo "Version doesn't match expected ($expected)."
#            echo "Make sure you run './runo pre-commit'"
#            exit 1
#          fi

  python36:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python36

  python37:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python37 test

  python38:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python38 test

  python39:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python39 test

  python310:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python310 test

  python311:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python311 test

  python312:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python312 test

  python313:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: unit test
        run: ./runo -c python313 test --cov --cov-report json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  end-to-end-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # e2d tests
      - name: e2e tests
        run: ./runo e2e
